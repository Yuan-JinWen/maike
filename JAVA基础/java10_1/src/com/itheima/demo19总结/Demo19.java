package com.itheima.demo19总结;

/*
    写出定义接口的格式
        interface 接口名 {
            public abstract void 方法名(); (常用,加抽象方法)
        }

    写出实现接口的格式
        class 类名 implements 接口名 {
            // 重写接口中的抽象方法
        }

    说出接口中成员的特点
        1.方法默认使用 public abstract修饰.不写也有
        2.变量默认使用 public static fianl修饰.不写也有
        3.没有构造方法

    能够说出使用多态的前提条件
        1.要有继承关系
        2.要有方法重写

    多态的好处:参数写父类,可以传入任意子类.提高代码的扩展性

    理解多态的向上转型
        范围小发赋值给范围大的,将子类赋值给父类(多态)
        父类 变量名 = new 子类();

    理解多态的向下转型
        范围大的赋值给范围小的.目标类型 变量名 = (目标类型)变量;
        子类 变量名 = (子类)变量;

        多态的向下转型好处:可以使用子类特有功能

    能够完成笔记本电脑案例（方法参数为接口)
 */
public class Demo19 {
}
